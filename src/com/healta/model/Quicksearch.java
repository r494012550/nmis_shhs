package com.healta.model;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import com.healta.model.base.BaseQuicksearch;
import com.jfinal.kit.PropKit;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Record;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Quicksearch extends BaseQuicksearch<Quicksearch> {
	public static final Quicksearch dao = new Quicksearch().dao();
	
	public Quicksearch findByStudyorderkey(Integer orderid) {
		return dao.findFirst("select top 1 * from quicksearch where studyorderkey=?", orderid);
	}
	
	public Quicksearch createFromRecord(Record x){
		Quicksearch qs = new Quicksearch();
		qs.setPatientkey(x.getInt("patientkey"));
		qs.setAdmissionkey(x.getInt("admissionkey"));
		qs.setStudyorderkey(x.getInt("studyorderkey"));
		StringBuffer content = new StringBuffer();
		content.append(x.getStr("patientid")).append(",");
		String pid_num=dao.matchNumber(x.getStr("patientid"));
		if(StrKit.notBlank(pid_num)){
			content.append(pid_num).append(",");
		}
		if(StrKit.notBlank(x.getStr("patientname"))) {
			content.append(x.getStr("patientname")).append(",");
		}
		if(StrKit.notBlank(x.getStr("py"))) {
			content.append(x.getStr("py")).append(",");
		} else if(StrKit.notBlank(x.getStr("patientname"))&&StrKit.notBlank(PropKit.use("system.properties").get("pinyin_separator"))) {
//			content+=x.getStr("patientname").replaceAll(PropKit.use("system.properties").get("pinyin_separator"), "");
			content.append(x.getStr("patientname").replaceAll(PropKit.use("system.properties").get("pinyin_separator"), "")).append(",");
		}
		if(StrKit.notBlank(x.getStr("telephone"))) {
			content.append(x.getStr("telephone")).append(",");
		}
		if(StrKit.notBlank(x.getStr("idnumber"))) {
			content.append(x.getStr("idnumber")).append(",");
		}
		if(StrKit.notBlank(x.getStr("accessionnumber"))) {
			content.append(x.getStr("accessionnumber")).append(",");
		}
		if(StrKit.notBlank(x.getStr("cardno"))) {
			content.append(x.getStr("cardno")).append(",");
		}
		if(StrKit.notBlank(x.getStr("inno"))) {
			content.append(x.getStr("inno")).append(",");
		}
		if(StrKit.notBlank(x.getStr("outno"))) {
			content.append(x.getStr("outno")).append(",");
		}
		if(StrKit.notBlank(x.getStr("studyid"))) {
			String studyid = x.getStr("studyid");
			//截取检查号 studyid后两位
			qs.setStudyid(studyid);
			content.append(studyid).append(",");
			String num=dao.matchNumber(studyid);
			if(StrKit.notBlank(num)){
				content.append(num).append(",");
			}
			if(StrKit.notBlank(dao.lastStr(studyid, 3))){
				content.append(dao.lastStr(studyid, 3)).append(",");
			}
			if(StrKit.notBlank(dao.lastStr(studyid, 4))){
				content.append(dao.lastStr(studyid, 4)).append(",");
			}
			if(StrKit.notBlank(dao.lastStr(studyid, 5))){
				content.append(dao.lastStr(studyid, 5)).append(",");
			}
			if(StrKit.notBlank(dao.lastStr(studyid, 6))){
				content.append(dao.lastStr(studyid, 6)).append(",");
			}
		}
		qs.setContent(content.toString());
		return qs;
	}
	
	public String matchNumber(String arg){
		String ret="";
		if(StrKit.notBlank(arg)){
			Pattern pattern = Pattern.compile("[1-9]\\d*");
			Matcher matcher = pattern.matcher(arg);
			if(matcher.find())
				ret=matcher.group(0);
		}
		return ret;
	}
	
	public String lastStr(String str,int size){
		String ret="";
		if(StrKit.notBlank(str)&&str.length()>size){
			ret=str.substring(str.length()-size);
		}
		return ret;
	}
}
